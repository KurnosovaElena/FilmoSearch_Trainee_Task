// <auto-generated />
using FilmoSearch.DataAcessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FilmoSearch.DataAcessLayer.Migrations
{
    [DbContext(typeof(PortalContext))]
    [Migration("20241012220428_data-seed")]
    partial class dataseed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ActorFilm", b =>
                {
                    b.Property<int>("ActorsId")
                        .HasColumnType("integer");

                    b.Property<int>("FilmsId")
                        .HasColumnType("integer");

                    b.HasKey("ActorsId", "FilmsId");

                    b.HasIndex("FilmsId");

                    b.ToTable("ActorFilm");
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 966366263,
                            FirstName = "Petra",
                            LastName = "Steuber"
                        },
                        new
                        {
                            Id = -1912641810,
                            FirstName = "Rachelle",
                            LastName = "Schaden"
                        },
                        new
                        {
                            Id = 1760710029,
                            FirstName = "Tyrique",
                            LastName = "Jerde"
                        },
                        new
                        {
                            Id = 977980276,
                            FirstName = "Gabriel",
                            LastName = "Watsica"
                        });
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = -1379419950,
                            Title = "Generic Granite Pants"
                        },
                        new
                        {
                            Id = 269060494,
                            Title = "Refined Concrete Sausages"
                        },
                        new
                        {
                            Id = -1490514713,
                            Title = "Fantastic Soft Salad"
                        },
                        new
                        {
                            Id = -1213682734,
                            Title = "Refined Steel Pants"
                        });
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FilmId")
                        .HasColumnType("integer");

                    b.Property<double>("Stars")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1989534010,
                            Description = "assumenda",
                            FilmId = -1379419950,
                            Stars = 0.088410669657917551,
                            Title = "Intelligent Steel Pants"
                        },
                        new
                        {
                            Id = -2080311550,
                            Description = "et",
                            FilmId = -1379419950,
                            Stars = 0.5064816304696218,
                            Title = "Fantastic Wooden Ball"
                        },
                        new
                        {
                            Id = -39545753,
                            Description = "ut",
                            FilmId = 269060494,
                            Stars = 0.36380697469143852,
                            Title = "Tasty Wooden Soap"
                        },
                        new
                        {
                            Id = -69134539,
                            Description = "necessitatibus",
                            FilmId = 269060494,
                            Stars = 0.76273204885580159,
                            Title = "Generic Cotton Chips"
                        },
                        new
                        {
                            Id = -1353979155,
                            Description = "omnis",
                            FilmId = -1379419950,
                            Stars = 0.92504622835128292,
                            Title = "Rustic Wooden Salad"
                        },
                        new
                        {
                            Id = -1294168547,
                            Description = "quis",
                            FilmId = -1379419950,
                            Stars = 0.84159178801492507,
                            Title = "Awesome Wooden Ball"
                        },
                        new
                        {
                            Id = -2103323266,
                            Description = "et",
                            FilmId = 269060494,
                            Stars = 0.003957376782016353,
                            Title = "Ergonomic Frozen Fish"
                        },
                        new
                        {
                            Id = -716151508,
                            Description = "ut",
                            FilmId = 269060494,
                            Stars = 0.05004069543974643,
                            Title = "Gorgeous Frozen Tuna"
                        },
                        new
                        {
                            Id = 1462531681,
                            Description = "reprehenderit",
                            FilmId = -1490514713,
                            Stars = 0.18058125535334324,
                            Title = "Small Rubber Fish"
                        },
                        new
                        {
                            Id = -110618787,
                            Description = "esse",
                            FilmId = -1490514713,
                            Stars = 0.28668918037562086,
                            Title = "Rustic Cotton Pizza"
                        },
                        new
                        {
                            Id = -971406953,
                            Description = "adipisci",
                            FilmId = -1213682734,
                            Stars = 0.56614595293813297,
                            Title = "Handcrafted Plastic Hat"
                        },
                        new
                        {
                            Id = 1637512937,
                            Description = "dolores",
                            FilmId = -1213682734,
                            Stars = 0.12774875711702571,
                            Title = "Awesome Concrete Mouse"
                        });
                });

            modelBuilder.Entity("ActorFilm", b =>
                {
                    b.HasOne("FilmoSearch.DataAcessLayer.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmoSearch.DataAcessLayer.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Review", b =>
                {
                    b.HasOne("FilmoSearch.DataAcessLayer.Entities.Film", "Film")
                        .WithMany("Reviews")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Film", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
