// <auto-generated />
using FilmoSearch.DataAcessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FilmoSearch.DataAcessLayer.Migrations
{
    [DbContext(typeof(PortalContext))]
    partial class PortalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ActorFilm", b =>
                {
                    b.Property<int>("ActorsId")
                        .HasColumnType("integer");

                    b.Property<int>("FilmsId")
                        .HasColumnType("integer");

                    b.HasKey("ActorsId", "FilmsId");

                    b.HasIndex("FilmsId");

                    b.ToTable("ActorFilm");
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 875042214,
                            FirstName = "Jaunita",
                            LastName = "Rippin"
                        },
                        new
                        {
                            Id = -642439868,
                            FirstName = "Ora",
                            LastName = "Hayes"
                        },
                        new
                        {
                            Id = -774512702,
                            FirstName = "Ernest",
                            LastName = "Simonis"
                        },
                        new
                        {
                            Id = -51198750,
                            FirstName = "Margarita",
                            LastName = "Hilpert"
                        });
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = -297420124,
                            Title = "Licensed Concrete Cheese"
                        },
                        new
                        {
                            Id = -506441405,
                            Title = "Incredible Frozen Soap"
                        },
                        new
                        {
                            Id = -1946473047,
                            Title = "Incredible Cotton Chips"
                        },
                        new
                        {
                            Id = 1409503215,
                            Title = "Awesome Steel Gloves"
                        });
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FilmId")
                        .HasColumnType("integer");

                    b.Property<double>("Stars")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1584369489,
                            Description = "reiciendis",
                            FilmId = -297420124,
                            Stars = 0.97861250776125852,
                            Title = "Rustic Cotton Shoes"
                        },
                        new
                        {
                            Id = 1845557322,
                            Description = "pariatur",
                            FilmId = -297420124,
                            Stars = 0.74003725189520697,
                            Title = "Handcrafted Cotton Chicken"
                        },
                        new
                        {
                            Id = -503083953,
                            Description = "labore",
                            FilmId = -506441405,
                            Stars = 0.10249937452365632,
                            Title = "Handcrafted Steel Car"
                        },
                        new
                        {
                            Id = 577157651,
                            Description = "saepe",
                            FilmId = -506441405,
                            Stars = 0.49179062942838969,
                            Title = "Ergonomic Granite Chicken"
                        },
                        new
                        {
                            Id = -1275034987,
                            Description = "earum",
                            FilmId = -297420124,
                            Stars = 0.11497611715455425,
                            Title = "Awesome Frozen Soap"
                        },
                        new
                        {
                            Id = -1675172239,
                            Description = "quia",
                            FilmId = -297420124,
                            Stars = 0.094769617512965532,
                            Title = "Intelligent Frozen Chair"
                        },
                        new
                        {
                            Id = 1450232123,
                            Description = "voluptatem",
                            FilmId = -506441405,
                            Stars = 0.88418921343160073,
                            Title = "Licensed Soft Tuna"
                        },
                        new
                        {
                            Id = -1977940407,
                            Description = "quae",
                            FilmId = -506441405,
                            Stars = 0.1963531972133663,
                            Title = "Practical Frozen Car"
                        },
                        new
                        {
                            Id = -371279446,
                            Description = "necessitatibus",
                            FilmId = -1946473047,
                            Stars = 0.73132328702332594,
                            Title = "Gorgeous Steel Towels"
                        },
                        new
                        {
                            Id = 1473829866,
                            Description = "cumque",
                            FilmId = -1946473047,
                            Stars = 0.61733711164178429,
                            Title = "Ergonomic Concrete Fish"
                        },
                        new
                        {
                            Id = 515598555,
                            Description = "et",
                            FilmId = 1409503215,
                            Stars = 0.11638306292030143,
                            Title = "Fantastic Steel Tuna"
                        },
                        new
                        {
                            Id = -323213791,
                            Description = "reprehenderit",
                            FilmId = 1409503215,
                            Stars = 0.78593079249392028,
                            Title = "Small Metal Pants"
                        });
                });

            modelBuilder.Entity("ActorFilm", b =>
                {
                    b.HasOne("FilmoSearch.DataAcessLayer.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmoSearch.DataAcessLayer.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Review", b =>
                {
                    b.HasOne("FilmoSearch.DataAcessLayer.Entities.Film", "Film")
                        .WithMany("Reviews")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("FilmoSearch.DataAcessLayer.Entities.Film", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
